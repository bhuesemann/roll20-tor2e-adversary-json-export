name: "Build"
# https://www.dotnetcurry.com/dotnetcore/github-actions-for-dotnet-developers
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+' # Push events to matching v*, i.e. v1.0, v20.15.10
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
jobs:
  build:
    name: Build 
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      TERM: xterm

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/dist -p:PublishProfile=Release

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: roll20-tor2e-adversary-json-export
        path: ${{env.DOTNET_ROOT}}/dist

    - name: Extract release notes
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v1

    - name: Read Releasenr
      id: releasenr
      run: |
        echo "::set-output name=body::$(cat RELEASE)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.releasenr.outputs.body }}
        release_name: Release ${{ steps.releasenr.outputs.body }}
        body: ${{ steps.extract-release-notes.outputs.release_notes }}
        draft: false
        prerelease: true
    
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'release.zip'
        path: ${{env.DOTNET_ROOT}}/dist/*
        
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ${{env.DOTNET_ROOT}}
    
    - name: Upload Release Asset
      id: upload_release_asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: 'release.zip'
        asset_name: roll20-tor2e-adversary-json-export.${{steps.releasenr.outputs.body}}.zip
        asset_content_type: application/zip
