name: "Build"
# https://www.dotnetcurry.com/dotnetcore/github-actions-for-dotnet-developers
on:
  push:
    branches:
      - master
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches:
      - master
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
    branches:
      - master
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10    
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      
jobs:
  build:
    name: Build 
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      TERM: xterm

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/dist -p:PublishProfile=Release

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: roll20-tor2e-adversary-json-export
        path: ${{env.DOTNET_ROOT}}/dist

    - name: Read Changelog
      id: changelog
      run: |
        echo "::set-output name=body::$(cat CHANGELOG.md)"

    - name: Create Release
      uses: actions/create-release@v1
      with:
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog.outputs.body }}
        draft: false
        prerelease: true
